buildscript {
    repositories {
        mavenCentral()
    }
}

plugins {
    id 'org.jetbrains.intellij' version '0.4.8'
    id 'org.jetbrains.grammarkit' version '2019.1'
}

apply plugin: 'idea'
apply plugin: 'org.jetbrains.intellij'
apply plugin: 'org.jetbrains.grammarkit'
apply plugin: 'java'

import org.jetbrains.grammarkit.tasks.*

group 'com.ronformat'
version '0.3' // Plugin version

intellij {
    version 'IC-2019.1' //IntelliJ IDEA 2019.1 dependency; for a full list of IntelliJ IDEA releases please see https://www.jetbrains.com/intellij-repository/releases
    plugins 'coverage' //Bundled plugin dependencies
    pluginName 'RonFormat'
}

publishPlugin {
    token intellijPublishToken
    channels publishChannel
}

sourceSets {
    main {
        java.srcDirs 'src/main/java', 'src/gen/java'
    }
}

task generateRonLexer(type: GenerateLexer) {
    source = 'src/main/resources/com/ronformat/Ron.flex'
    targetDir = 'src/gen/java/com/ronformat/lexer'
    targetClass = 'RonLexer'
    purgeOldFiles = true
}

task generateRonParser(type: GenerateParser) {
    source = 'src/main/resources/com/ronformat/Ron.bnf'
    targetRoot = 'src/gen/java'
    pathToParser = '/com/ronformat/parser/RonParser.java'
    pathToPsiRoot = '/com/ronformat/psi'
    purgeOldFiles = true
}

compileJava.dependsOn generateRonLexer, generateRonParser
